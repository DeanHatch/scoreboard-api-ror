== Design for Confirmation of Customer Registration

Customers are identified by their email addresses, which are provided at Customer Registration.
To confirm that an email address is valid
and correct, an email will be sent to each new Customer as they register. 
The email will welcome the Customer to the service.
The email will include a link the Customer must follow to complete the Registration.
The link will include a token which must match the token, stored with the Customer record,
that was generated for the email. Tokens will be unique. 
Until the link has been followed, the Customer may not create any Competitions.

=== What's Needed


This enhancement will affect each aspect of the M-V-C framework.

Here's what needs to be added/changed:

==== Customer Model
A string column needs to be added to the model to hold the confirmation token.
The #initialize method gives this string its value and saves it with the rest of the record.
The model should also have a #confirmed? method which is *true* iff the confirmation
token is *nil*.

==== Customer Emailer and Customer Emailer Views
The Welcome emailer and the two (html and text) Welcome email views need 
to be changed to include a link and instructions to the Customer that they
must follow the link to complete their Registration.

==== Customers Controller
This is where the bulk of the changes need to be made.

* At end of #create action in customers controller, the Customer is NOT logged in
  (i.e.  customer id is not kept in session.)
* Create a #confirm action to accept/verify confirmation token and
  set confirmation token to *nil*.
* Correctly specified #confirm action should result in Customer being logged in.
* Navigation items on left should only appear if confirmed.
 
==== Customer Views
An additional view must be provided to inform the Customer that they need to (or did)
complete their Registration Confirmation.


==== routes.rb
Add route to confirmation action in customers controller.

=== Tests

==== Unit Tests
*  New Customer must have a non-nil confirmation token.
*  New Customer #confirmed? == *false*.
* Setting confirmation token to *nil* results in #confirmed? == *true*.


==== Functional Tests
*  Customer creation results in email.
*  Valid #confirm results in *nil* confirmation token.
* Valid #confirm results in logged in Customer (i.e. customer id in session.)


==== Other Tests?